[{"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/index.js":"1","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/App.js":"2","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reportWebVitals.js":"3","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Header.js":"4","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Footer.js":"5","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/HomeScreen.js":"6","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Product.js":"7","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Rating.js":"8","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ProductScreen.js":"9","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/store.js":"10","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/productReducers.js":"11","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/productConstants.js":"12","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/productActions.js":"13","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Loader.js":"14","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Message.js":"15","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/CartScreen.js":"16","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/cartReducers.js":"17","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/cartConstants.js":"18","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/cartActions.js":"19","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/userReducers.js":"20","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/userConstants.js":"21","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/LoginScreen.js":"22","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/userActions.js":"23","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/FormContainer.js":"24","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/RegisterScreen.js":"25","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ProfileScreen.js":"26","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ShippingScreen.js":"27","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/PaymentScreen.js":"28","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/PlaceOrderScreen.js":"29","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/CheckoutSteps.js":"30","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/orderReducers.js":"31","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/orderActions.js":"32","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/orderConstants.js":"33","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/OrderScreen.js":"34","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/UserListScreen.js":"35","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/UserEditScreen.js":"36"},{"size":595,"mtime":1610134202913,"results":"37","hashOfConfig":"38"},{"size":1836,"mtime":1610546772422,"results":"39","hashOfConfig":"38"},{"size":362,"mtime":1609939443050,"results":"40","hashOfConfig":"38"},{"size":2907,"mtime":1610525892782,"results":"41","hashOfConfig":"38"},{"size":405,"mtime":1609940982800,"results":"42","hashOfConfig":"38"},{"size":1152,"mtime":1610179555350,"results":"43","hashOfConfig":"38"},{"size":846,"mtime":1609953551890,"results":"44","hashOfConfig":"38"},{"size":1394,"mtime":1609952789590,"results":"45","hashOfConfig":"38"},{"size":5669,"mtime":1610205454830,"results":"46","hashOfConfig":"38"},{"size":1857,"mtime":1610547111422,"results":"47","hashOfConfig":"38"},{"size":1060,"mtime":1610183815920,"results":"48","hashOfConfig":"38"},{"size":360,"mtime":1610179996060,"results":"49","hashOfConfig":"38"},{"size":1194,"mtime":1610183952020,"results":"50","hashOfConfig":"38"},{"size":381,"mtime":1610187647410,"results":"51","hashOfConfig":"38"},{"size":275,"mtime":1610179402460,"results":"52","hashOfConfig":"38"},{"size":3949,"mtime":1610200000293,"results":"53","hashOfConfig":"38"},{"size":1293,"mtime":1610387021062,"results":"54","hashOfConfig":"38"},{"size":233,"mtime":1610379328510,"results":"55","hashOfConfig":"38"},{"size":1288,"mtime":1610387021062,"results":"56","hashOfConfig":"38"},{"size":3669,"mtime":1610547293802,"results":"57","hashOfConfig":"38"},{"size":1468,"mtime":1610546965692,"results":"58","hashOfConfig":"38"},{"size":2288,"mtime":1610267985826,"results":"59","hashOfConfig":"38"},{"size":6197,"mtime":1610548185522,"results":"60","hashOfConfig":"38"},{"size":438,"mtime":1610267132396,"results":"61","hashOfConfig":"38"},{"size":3296,"mtime":1610277987502,"results":"62","hashOfConfig":"38"},{"size":5582,"mtime":1610461671930,"results":"63","hashOfConfig":"38"},{"size":2544,"mtime":1610387020872,"results":"64","hashOfConfig":"38"},{"size":1700,"mtime":1610387021062,"results":"65","hashOfConfig":"38"},{"size":6091,"mtime":1610461483690,"results":"66","hashOfConfig":"38"},{"size":1404,"mtime":1610387021372,"results":"67","hashOfConfig":"38"},{"size":2554,"mtime":1610461891000,"results":"68","hashOfConfig":"38"},{"size":3312,"mtime":1610461483390,"results":"69","hashOfConfig":"38"},{"size":787,"mtime":1610461766130,"results":"70","hashOfConfig":"38"},{"size":7019,"mtime":1610461483760,"results":"71","hashOfConfig":"38"},{"size":3259,"mtime":1610546872852,"results":"72","hashOfConfig":"38"},{"size":3288,"mtime":1610548323282,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"998ny8",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"76"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"129","messages":"130","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"76"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"136","messages":"137","errorCount":1,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"76"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/index.js",[],["156","157"],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/App.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reportWebVitals.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Header.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Footer.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/HomeScreen.js",["158"],"import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\n\nimport { listProducts } from '../actions/productActions'\nimport { productListReducer } from '../reducers/productReducers';\nconst HomeScreen = () => {\n    const dispatch = useDispatch()\n\n    const productList = useSelector(state => state.productList)\n    const { loading, error, products } = productList\n    useEffect(() => {\n        dispatch(listProducts())\n\n    }, [dispatch])\n    return (\n        <>\n            <h1>Latest PRoducts</h1>\n            {loading ? <Loader /> : error ? (<Message variant='danger'>{error}</Message>) : (\n                <Row>\n                    {products.map(product => (\n                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                            <Product product={product} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n\n        </>\n    )\n}\n\nexport default HomeScreen\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Product.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Rating.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ProductScreen.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/store.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/productReducers.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/productConstants.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/productActions.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Loader.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/Message.js",["159"],"import React from 'react'\nimport { Alert } from 'react-bootstrap';\nconst Message = ({ variant, children }) => {\n    return (\n        <div variant={variant}>\n            {children}\n        </div>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'info',\n}\nexport default Message\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/CartScreen.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/cartReducers.js",["160"],"import { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch (action.type) {\n        case CART_ADD_ITEM:\n            const item = action.payload\n\n            const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if (existItem) {\n                return {\n                    ...state,\n                    cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x)\n                }\n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n        case CART_REMOVE_ITEM:\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(x => x.product !== action.payload)\n            }\n        case CART_SAVE_SHIPPING_ADDRESS:\n            return {\n                ...state,\n                shippingAddress: action.payload\n            }\n        case CART_SAVE_PAYMENT_METHOD:\n            return {\n                ...state,\n                paymentMethod: action.payload,\n            }\n        default:\n            return state\n    }\n}","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/cartConstants.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/cartActions.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/userReducers.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/userConstants.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/LoginScreen.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/userActions.js",["161"],"import axios from \"axios\"\nimport { USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DETAILS_RESET, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LIST_FAIL, USER_LIST_RESET, USER_DELETE_FAIL, USER_DELETE_SUCCESS } from \"../constants/userConstants\"\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants';\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({ type: USER_LOGOUT })\n    dispatch({ type: USER_DETAILS_RESET })\n    dispatch({ type: ORDER_LIST_MY_RESET })\n    dispatch({ type: USER_LIST_RESET })\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST,\n        })\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DETAILS_REQUEST,\n        })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(`/api/users/${id}`, config)\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_PROFILE_REQUEST,\n        })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.put(`/api/users/profile`, user, config)\n        dispatch({\n            type: USER_UPDATE_PROFILE_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_PROFILE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_LIST_REQUEST,\n        })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.get(`/api/users`, config)\n        dispatch({\n            type: USER_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_LIST_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_DELETE_REQUEST,\n        })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        await axios.delete(`/api/users/${id}`, config)\n        dispatch({\n            type: USER_DELETE_SUCCESS,\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_DELETE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: USER_UPDATE_REQUEST,\n        })\n        const { userLogin: { userInfo } } = getState()\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n        const { data } = await axios.USER_UPDATE_PROFILE_REQUEST(`/api/users/${id}`, user, config)\n        dispatch({\n            type: USER_UPDATE_SUCCESS,\n        })\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: USER_UPDATE_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        })\n    }\n}","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/FormContainer.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/RegisterScreen.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ProfileScreen.js",["162","163","164"],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/ShippingScreen.js",["165","166"],"\nimport React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n    const cart = useSelector(state => state.cart)\n    const { shippingAddress } = cart\n    const [address, setAddress] = useState(shippingAddress.address)\n    const [city, setCity] = useState(shippingAddress.city)\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n    const [country, setCountry] = useState(shippingAddress.country)\n\n    const dispatch = useDispatch()\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\n        history.push('/payment')\n    }\n    return (\n        <FormContainer>\n            <CheckoutSteps step1 step2 />\n            <h1>Shipping</h1>\n            <Form onSubmit={submitHandler}>\n                <Form.Group controlId=\"address\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type='text' placeholder='Enter address' value={address} required onChange={(e) => setAddress(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"city\">\n                    <Form.Label>City</Form.Label>\n                    <Form.Control type='text' placeholder='Enter city' value={city} required onChange={(e) => setCity(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"postalCode\">\n                    <Form.Label>Postal Code</Form.Label>\n                    <Form.Control type='text' placeholder='Enter postal Code' value={postalCode} required onChange={(e) => setPostalCode(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId=\"country\">\n                    <Form.Label>Country</Form.Label>\n                    <Form.Control type='text' placeholder='Enter country' value={country} required onChange={(e) => setCountry(e.target.value)}>\n\n                    </Form.Control>\n                </Form.Group>\n\n                <Button type='submit' variant='primary'>\n                    Continue\n                </Button>\n            </Form>\n        </FormContainer>\n    )\n}\n\nexport default ShippingScreen\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/PaymentScreen.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/PlaceOrderScreen.js",["167","168"],"import React, { useState, useEffect } from 'react'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions';\n\nconst PlaceOrderScreen = ({ history }) => {\n\n    const dispatch = useDispatch()\n    const cart = useSelector(state => state.cart)\n\n    //Calculate prices\n    const addDecimals = (num) => {\n        return (Math.round(num * 100) / 100).toFixed(2)\n    }\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n    cart.totalPrice = addDecimals(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate = useSelector(state => state.orderCreate)\n    const { order, success, error } = orderCreate\n\n    useEffect(() => {\n        if (success) {\n            history.pushState(`/order/${order._id}`)\n        }\n        //eslint-disable-next-line\n    }, [history, success])\n\n    const placeOrderHandler = () => {\n        dispatch(createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n        }))\n    }\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Shipping</h2>\n                            <p>\n                                <strong>Address</strong>\n                                {cart.shippingAddress.address}, {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}, {cart.shippingAddress.country}\n                            </p>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Payment Method</h2>\n                            <strong>Method: </strong>\n                            {cart.paymentMethod}\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <h2>Order Items</h2>\n                            {cart.cartItems.length === 0 ? <Message>Your Cart is Empty</Message> : (\n                                <ListGroup variant='flush'>\n                                    {cart.cartItems.map((item, index) => (\n                                        <ListGroup.Item key={index}>\n                                            <Row>\n                                                <Col md={1}>\n                                                    <Image src={item.image} alt={item.name}\n                                                        fluid rounded />\n                                                </Col>\n                                                <Col>\n                                                    <Link to={`/product/${item.product}`}>\n                                                        {item.name}\n                                                    </Link>\n                                                </Col>\n                                                <Col md={4}>\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\n                                                </Col>\n                                            </Row>\n                                        </ListGroup.Item>\n                                    ))}\n                                </ListGroup>\n                            )}\n                        </ListGroup.Item>\n                    </ListGroup>\n                </Col>\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Button type='button' className='btn-block' disabled={cart.cartItems === 0} onClick={placeOrderHandler}>Place Order</Button>\n                            </ListGroup.Item>\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/components/CheckoutSteps.js",["169","170","171","172"],"import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className='justify-content-center mb-4'>\n            <Nav.Item>\n                {step1 ? (\n                    <LinkContainer to='/login'>\n                        <Nav.Link>Sign In</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.link disabled>Sign In</Nav.link>}\n            </Nav.Item>\n            <Nav.Item>\n                {step2 ? (\n                    <LinkContainer to='/shipping'>\n                        <Nav.Link>Shipping</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.link disabled>Shipping</Nav.link>}\n            </Nav.Item>\n            <Nav.Item>\n                {step3 ? (\n                    <LinkContainer to='/payment'>\n                        <Nav.Link>Payment</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.link disabled>Payment</Nav.link>}\n            </Nav.Item>\n            <Nav.Item>\n                {step4 ? (\n                    <LinkContainer to='/placeorder'>\n                        <Nav.Link>Place Order</Nav.Link>\n                    </LinkContainer>\n                ) : <Nav.link disabled>Place Order</Nav.link>}\n            </Nav.Item>\n\n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/reducers/orderReducers.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/actions/orderActions.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/constants/orderConstants.js",[],"/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/OrderScreen.js",["173","174","175","176"],"import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder } from '../actions/orderActions';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants'\nimport axios from 'axios';\n\nconst OrderScreen = ({ match }) => {\n    const orderId = match.params.id\n    const [sdkReady, setSdkReady] = useState(false)\n    const dispatch = useDispatch()\n\n\n\n\n    const orderDetails = useSelector(state => state.orderDetails)\n    const { order, loading, error } = orderDetails\n\n    const orderPay = useSelector(state => state.orderPay)\n    const { loading: loadingPay, success: successPay } = orderPay\n\n    if (!loading) {\n        //Calculate prices\n        const addDecimals = (num) => {\n            return (Math.round(num * 100) / 100).toFixed(2)\n        }\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0))\n\n    }\n\n    useEffect(() => {\n        const addPayPalScript = async () => {\n            const { data: clientId } = await axios.get('/api/config/paypal')\n            const script = document.createElement('script')\n            script.type = 'text/javascript'\n            script.src = 'https://www.paypal.com/sdk/js?client-id=${clientId}'\n            script.async = true\n            script.onload = () => {\n                setSdkReady(true)\n            }\n            document.body.appendChild(script)\n        }\n        if (!order || successPay) {\n            dispatch({ type: ORDER_PAY_RESET })\n            dispatch(getOrderDetails(orderId))\n\n        } else if (!order.isPaid) {\n            if (!window.paypal) {\n                addPayPalScript()\n            } else {\n                setSdkReady(true)\n            }\n        }\n    }, [dispatch, orderId, successPay, order])\n\n    const successPaymentHandler = (paymentResult) => {\n        console.log(paymentResult)\n        dispatch(payOrder(orderId, paymentResult))\n    }\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : <>\n        <h1>Order {order._id}</h1>\n        <Row>\n            <Col md={8}>\n                <ListGroup variant='flush'>\n                    <ListGroup.Item>\n                        <h2>Shipping</h2>\n                        <p><strong>Name: </strong>{order.user.name}</p>\n                        <p>\n                            <strong>Email: </strong><a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\n                        <p>\n                            <strong>Address</strong>\n                            {order.shippingAddress.address}, {order.shippingAddress.city}, {order.shippingAddress.postalCode}, {order.shippingAddress.country}\n                        </p>\n                        {order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> :\n                            <Message variant='danger'>Not Delivered</Message>}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Payment Method</h2>\n                        <p>\n                            <strong>Method: </strong>\n                            {order.paymentMethod}\n                        </p>\n                        {order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> :\n                            <Message variant='danger'>Not Paid</Message>}\n                    </ListGroup.Item>\n                    <ListGroup.Item>\n                        <h2>Order Items</h2>\n                        {order.orderItems.length === 0 ? <Message>ORder is empty</Message> : (\n                            <ListGroup variant='flush'>\n                                {order.orderItems.map((item, index) => (\n                                    <ListGroup.Item key={index}>\n                                        <Row>\n                                            <Col md={1}>\n                                                <Image src={item.image} alt={item.name}\n                                                    fluid rounded />\n                                            </Col>\n                                            <Col>\n                                                <Link to={`/product/${item.product}`}>\n                                                    {item.name}\n                                                </Link>\n                                            </Col>\n                                            <Col md={4}>\n                                                {item.qty} x ${item.price} = ${item.qty * item.price}\n                                            </Col>\n                                        </Row>\n                                    </ListGroup.Item>\n                                ))}\n                            </ListGroup>\n                        )}\n                    </ListGroup.Item>\n                </ListGroup>\n            </Col>\n            <Col md={4}>\n                <Card>\n                    <ListGroup variant='flush'>\n                        <ListGroup.Item>\n                            <h2>Order Summary</h2>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Items</Col>\n                                <Col>${order.itemsPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Shipping</Col>\n                                <Col>${order.shippingPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Tax</Col>\n                                <Col>${order.taxPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        <ListGroup.Item>\n                            <Row>\n                                <Col>Total</Col>\n                                <Col>${order.totalPrice}</Col>\n                            </Row>\n                        </ListGroup.Item>\n                        {!order.isPaid && (\n                            <ListGroup.Item>\n                                {loadingPay && <Loader />}\n                                {!sdkReady ? <Loader /> : (\n                                    <PayPalButton amount={order.totalPrice} onSuccess={successPaymentHandler} />\n                                )}\n                            </ListGroup.Item>\n                        )}\n                    </ListGroup>\n                </Card>\n            </Col>\n        </Row>\n    </>\n}\n\nexport default OrderScreen\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/UserListScreen.js",["177","178"],"import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Tab } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\nconst UserListScreen = ({ history }) => {\n    const dispatch = useDispatch()\n    const userList = useSelector(state => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    const userDelete = useSelector(state => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if (userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n\n    }, [dispatch, history, successDelete, userInfo])\n\n    const deleteHandler = (id) => {\n        if (window.confirm('Are you sure')) {\n            dispatch(deleteUser(id))\n\n        }\n    }\n    return (\n        <>\n            <h1>Users</h1>\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\n                <Table striped bordered hover responsive className='table-sm'>\n                    <thead>\n                        <tr>\n                            <th>ID</th>\n                            <th>NAME</th>\n                            <th>EMAIL</th>\n                            <th>ADMIN</th>\n                            <th></th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.map(user => (\n                            <tr key={user._id}>\n                                <td>{user._id}</td>\n                                <td>{user.name}</td>\n                                <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\n                                <td>\n                                    {user.isAdmin ? (<i className='fas fa-check' style={\n                                        { color: 'green' }\n                                    }></i>) : (\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\n                                        )}\n                                </td>\n                                <td>\n                                    <LinkContainer to={`/admin/user/${user._id}`}>\n                                        <Button variant='light' className='btn-sm'>\n                                            <i className='fas fa-edit'></i>\n                                        </Button>\n                                    </LinkContainer>\n                                    <Button variant='danger' className='btn-sm' onClick={() =>\n                                        deleteHandler(user._id)}>\n                                        <i className='fas fa-trash'></i>\n                                    </Button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </>\n    )\n}\n\nexport default UserListScreen\n","/home/adroit_machine_dev/react/traversy/1/proshop/frontend/src/screens/UserEditScreen.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":9,"column":10,"nodeType":"185","messageId":"186","endLine":9,"endColumn":28},{"ruleId":"183","severity":1,"message":"187","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":15},{"ruleId":"183","severity":1,"message":"188","line":1,"column":43,"nodeType":"185","messageId":"186","endLine":1,"endColumn":69},{"ruleId":"189","severity":2,"message":"190","line":141,"column":19,"nodeType":"185","messageId":"191","endLine":141,"endColumn":38},{"ruleId":"183","severity":1,"message":"192","line":2,"column":10,"nodeType":"185","messageId":"186","endLine":2,"endColumn":14},{"ruleId":"183","severity":1,"message":"193","line":30,"column":22,"nodeType":"185","messageId":"186","endLine":30,"endColumn":35},{"ruleId":"189","severity":2,"message":"194","line":97,"column":14,"nodeType":"185","messageId":"191","endLine":97,"endColumn":27},{"ruleId":"183","severity":1,"message":"195","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":21},{"ruleId":"183","severity":1,"message":"196","line":4,"column":23,"nodeType":"185","messageId":"186","endLine":4,"endColumn":34},{"ruleId":"183","severity":1,"message":"197","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"198","severity":2,"message":"199","line":73,"column":54,"nodeType":"200","endLine":73,"endColumn":58},{"ruleId":"201","severity":1,"message":"202","line":12,"column":21,"nodeType":"203","endLine":12,"endColumn":40},{"ruleId":"201","severity":1,"message":"202","line":19,"column":21,"nodeType":"203","endLine":19,"endColumn":40},{"ruleId":"201","severity":1,"message":"202","line":26,"column":21,"nodeType":"203","endLine":26,"endColumn":40},{"ruleId":"201","severity":1,"message":"202","line":33,"column":21,"nodeType":"203","endLine":33,"endColumn":40},{"ruleId":"183","severity":1,"message":"204","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":16},{"ruleId":"183","severity":1,"message":"205","line":36,"column":27,"nodeType":"185","messageId":"186","endLine":36,"endColumn":35},{"ruleId":"206","severity":1,"message":"207","line":39,"column":26,"nodeType":"208","messageId":"209","endLine":39,"endColumn":79},{"ruleId":"198","severity":2,"message":"199","line":101,"column":50,"nodeType":"200","endLine":101,"endColumn":54},{"ruleId":"183","severity":1,"message":"210","line":3,"column":25,"nodeType":"185","messageId":"186","endLine":3,"endColumn":28},{"ruleId":"211","severity":1,"message":"212","line":26,"column":8,"nodeType":"213","endLine":26,"endColumn":42,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'productListReducer' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","'CART_SAVE_SHIPPING_ADDRESS' is defined but never used.","no-undef","'USER_DELETE_REQUEST' is not defined.","undef","'Link' is defined but never used.","'laodingOrders' is assigned a value but never used.","'loadingOrders' is not defined.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'useState' is defined but never used.","react/jsx-no-undef","'Link' is not defined.","JSXIdentifier","react/jsx-pascal-case","Imported JSX component link must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Button' is defined but never used.","'clientId' is assigned a value but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'Tab' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo'. Either include it or remove the dependency array.","ArrayExpression",["217"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},"Update the dependencies array to be: [dispatch, history, successDelete, userInfo]",{"range":"220","text":"221"},[915,949],"[dispatch, history, successDelete, userInfo]"]